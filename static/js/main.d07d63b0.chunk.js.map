{"version":3,"sources":["firebaseConfig.js","redux/types.js","utils/auth.js","utils/constants.js","components/Auth/Auth.js","redux/actions.js","utils/database.js","utils/storage.js","utils/utils.js","components/Error/Error.js","components/ProductForm/ProductForm.js","components/Product/Product.js","components/Products/Products.js","components/PrivateRoute.js","components/Menu/Menu.js","components/App.js","redux/authReducer.js","redux/databaseReducer.js","redux/rootReducer.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","storage","database","SET_CURRENT_USER","SET_PRODUCTS","SET_ID_SELECTED_PRODUCT","signOut","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","PATH_PRODUCTS","mapDispatchToProps","setCurrentUser","user","type","payload","connect","props","isSignUp","useState","userData","setUserData","history","useHistory","e","a","preventDefault","push","console","error","useEffect","onAuthStateChanged","className","Body","Title","onSubmit","Group","htmlFor","Input","id","placeholder","value","required","onChange","state","target","primary","to","getRef","path","ref","putFileToStorage","file","name","put","getImageUrlFromStorage","child","getDownloadURL","pluralType","oneType","twoType","threeType","Math","abs","formDataConvert","data","newData","date","dateInMs","Date","parse","getDateToday","year","getFullYear","month","getMonth","day","getDate","Error","danger","message","products","idSelectedProduct","productsList","selectedProduct","find","product","productId","isDefaultForm","isUploadData","setIsUploadData","useForm","register","handleSubmit","errors","isDiscount","watch","formData","convertedData","productsRef","getProductsRef","fileUrl","putDataToDB","log","set","defaultValue","title","minLength","maxLength","description","rows","price","max","discount","min","disabled","setIdSelectedProduct","isDiscountValid","now","src","alt","Text","hoursLeft","floor","daysLeft","getDiscountDaysLeft","toFixed","Footer","onClick","remove","setProductsList","on","snapshot","val","length","map","PrivateRoute","Component","component","isUserAuth","rest","render","Menu","pathname","useLocation","productsPath","formPath","currentUser","Products","ProductForm","exact","from","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d07d63b0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: 'AIzaSyBxb0xYXk2ZbLcz_3FymDkVuYjhq0eTeVU',\r\n  authDomain: 'auth-test-dc179.firebaseapp.com',\r\n  databaseURL: 'https://auth-test-dc179-default-rtdb.firebaseio.com',\r\n  projectId: 'auth-test-dc179',\r\n  storageBucket: 'auth-test-dc179.appspot.com',\r\n  messagingSenderId: '238220952507',\r\n  appId: '1:238220952507:web:ee260232234f8bac0e7a9e'\r\n});\r\nconst auth = app.auth();\r\nconst storage = app.storage();\r\nconst database = app.database();\r\nexport {auth, storage, database};\r\nexport default app;\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const SET_PRODUCTS = 'SET_PRODUCTS';\r\nexport const SET_ID_SELECTED_PRODUCT = 'SET_ID_SELECTED_PRODUCT';\r\n","import {auth} from '../firebaseConfig';\r\n\r\nexport function signOut() {\r\n  return auth.signOut();\r\n}\r\n\r\nexport function signUp(email, password) {\r\n  return auth.createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return auth.signInWithEmailAndPassword(email, password);\r\n}\r\n","export const PATH_PRODUCTS = 'products';\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, Form, Button} from 'bootstrap-4-react';\r\nimport './Auth.css';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nimport {auth} from '../../firebaseConfig';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {setCurrentUser} from '../../redux/actions';\r\nimport {signIn, signUp} from '../../utils/auth';\r\nimport {PATH_PRODUCTS} from '../../utils/constants';\r\n\r\nfunction Auth(props) {\r\n  const {isSignUp} = props;\r\n  const [userData, setUserData] = useState({email: 'a2@gmail.com', password: '123456'});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      props.setCurrentUser(user);\r\n    });\r\n  }, []);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (isSignUp) {\r\n        await signUp(userData.email, userData.password);\r\n      } else {\r\n        await signIn(userData.email, userData.password);\r\n      }\r\n      history.push(`/${PATH_PRODUCTS}`);\r\n    } catch {\r\n      console.error('Failed an operation');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Auth\">\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>{isSignUp ? 'Sign Up' : 'Sign In'}</Card.Title>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <label htmlFor=\"email-input\">Email address</label>\r\n              <Form.Input\r\n                type=\"email\"\r\n                id=\"email-input\"\r\n                placeholder=\"Enter email\"\r\n                value={userData.email}\r\n                required\r\n                onChange={(e) => setUserData((state) => ({...state, email: e.target.value}))}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label htmlFor=\"password-imput\">Password</label>\r\n              <Form.Input\r\n                type=\"password\"\r\n                id=\"password-imput\"\r\n                placeholder=\"Password\"\r\n                value={userData.password}\r\n                required\r\n                onChange={(e) => setUserData((state) => ({...state, password: e.target.value}))}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group></Form.Group>\r\n            <Button primary type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <div className=\"signin-link\">\r\n            {isSignUp ? <Link to=\"/\">Войти в аккаунт</Link> : <Link to=\"/signUp\">Зарегистрироваться</Link>}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentUser\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n","import {SET_CURRENT_USER, SET_PRODUCTS, SET_ID_SELECTED_PRODUCT} from './types';\r\n\r\nexport function setCurrentUser(user) {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function setProductsList(products) {\r\n  return {\r\n    type: SET_PRODUCTS,\r\n    payload: products\r\n  };\r\n}\r\n\r\nexport function setIdSelectedProduct(product) {\r\n  return {\r\n    type: SET_ID_SELECTED_PRODUCT,\r\n    payload: product\r\n  };\r\n}\r\n","import {database} from '../firebaseConfig';\r\n\r\nexport function onDeleteProduct(path) {\r\n  database.ref(path).remove();\r\n}\r\n\r\nexport function getRef(path) {\r\n  return database.ref(path);\r\n}\r\n","import {storage} from '../firebaseConfig';\r\n\r\nexport async function putFileToStorage(file) {\r\n  return storage.ref(`products/${file.name}`).put(file);\r\n}\r\n\r\nexport async function getImageUrlFromStorage(file) {\r\n  return storage.ref('products').child(file.name).getDownloadURL();\r\n}\r\n","export function pluralType(value, oneType, twoType, threeType) {\r\n  value = Math.abs(value);\r\n  value %= 100;\r\n  if (value >= 5 && value <= 20) {\r\n    return threeType;\r\n  }\r\n  value %= 10;\r\n  if (value === 1) {\r\n    return oneType;\r\n  }\r\n  if (value >= 2 && value <= 4) {\r\n    return twoType;\r\n  }\r\n  return threeType;\r\n}\r\n\r\nexport function formDataConvert(data) {\r\n  const newData = data;\r\n  newData.file = data.file[0];\r\n  if (data.date) {\r\n    const oneDayMs = 86400000;\r\n    const dateInMs = Date.parse(data.date);\r\n    newData.date = dateInMs + oneDayMs;\r\n  }\r\n\r\n  return newData;\r\n}\r\n\r\nexport function getDateToday() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n\r\n  month = month > 10 ? month : `0${month}`;\r\n  day = day > 10 ? day : `0${day}`;\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","import React from 'react';\r\nimport './Error.css';\r\nimport {Alert} from 'bootstrap-4-react';\r\n\r\nexport default function Error({error}) {\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Alert className=\"alert\" danger>\r\n          {error.message}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Card, Form, Button} from 'bootstrap-4-react';\r\nimport './ProductForm.css';\r\nimport {useForm} from 'react-hook-form';\r\nimport {connect} from 'react-redux';\r\nimport {getRef} from '../../utils/database';\r\nimport {PATH_PRODUCTS} from '../../utils/constants';\r\nimport {getImageUrlFromStorage, putFileToStorage} from '../../utils/storage';\r\nimport {formDataConvert, getDateToday} from '../../utils/utils';\r\nimport Error from '../Error/Error';\r\n\r\nfunction ProductForm({isDefaultForm, selectedProduct}) {\r\n  const [isUploadData, setIsUploadData] = useState(false);\r\n  const {register, handleSubmit, errors, watch} = useForm();\r\n  const isDiscount = watch('discount', selectedProduct ? true : false);\r\n\r\n  async function onSubmit(formData) {\r\n    const convertedData = formDataConvert(formData);\r\n\r\n    setIsUploadData(true);\r\n    const productsRef = getProductsRef();\r\n    try {\r\n      await putFileToStorage(convertedData.file);\r\n      const fileUrl = await getImageUrlFromStorage(convertedData.file);\r\n      convertedData.file = fileUrl;\r\n      putDataToDB(productsRef, convertedData);\r\n    } catch {\r\n      console.log('Data is not uloaded');\r\n    }\r\n    setIsUploadData(false);\r\n  }\r\n\r\n  function getProductsRef() {\r\n    let productsPath = '';\r\n    if (selectedProduct) {\r\n      productsPath = `${PATH_PRODUCTS}/${selectedProduct.productId}`;\r\n    } else {\r\n      productsPath = PATH_PRODUCTS;\r\n    }\r\n    return getRef(productsPath);\r\n  }\r\n\r\n  function putDataToDB(ref, data) {\r\n    if (selectedProduct) {\r\n      ref.set(data);\r\n    } else {\r\n      ref.push(data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductForm\">\r\n      <Card>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Form.Group>\r\n              <label htmlFor=\"title\">Заголовок*</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                placeholder=\"Введите заголовок\"\r\n                className=\"form-control\"\r\n                defaultValue={selectedProduct && selectedProduct.title}\r\n                ref={register({\r\n                  required: 'Заголовок пуст.',\r\n                  minLength: {value: 20, message: 'Введено менее 20-ти симоволов.'},\r\n                  maxLength: {value: 60, message: 'Введено более 60-ти симоволов.'}\r\n                })}\r\n              />\r\n              <Error error={errors.title} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label htmlFor=\"file\">Фото*</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                className=\"input-block\"\r\n                ref={register({required: 'Фото не загружено.'})}\r\n              />\r\n              <Error error={errors.file} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label htmlFor=\"description\">Описание товара</label>\r\n              <textarea\r\n                type=\"text\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                defaultValue={selectedProduct && selectedProduct.description}\r\n                rows=\"3\"\r\n                className=\"form-control\"\r\n                ref={register({maxLength: {value: 200, message: 'Максимальное кол-во символов - 200'}})}\r\n              />\r\n              <Error error={errors.description} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label htmlFor=\"price\">Цена*</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"price\"\r\n                id=\"price\"\r\n                defaultValue={selectedProduct && selectedProduct.price}\r\n                className=\"form-control\"\r\n                placeholder=\"99999999.99$\"\r\n                ref={register({\r\n                  required: 'Цена не введена.',\r\n                  max: {\r\n                    value: 99999999.9,\r\n                    message: 'Максимальное значение 99999999.9'\r\n                  } /* pattern: /^\\d{1,8}[.]?\\d{1,2}$/ */\r\n                })}\r\n              />\r\n              <Error error={errors.price} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label htmlFor=\"discount\">Процент скидки</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"10-90%\"\r\n                id=\"discount\"\r\n                defaultValue={selectedProduct && selectedProduct.discount}\r\n                name=\"discount\"\r\n                ref={register({\r\n                  min: {value: 10, message: 'Минимальное значение 10.'},\r\n                  max: {value: 90, message: 'Максимальное значение 90.'}\r\n                })}\r\n              />\r\n              <Error error={errors.discount} />\r\n            </Form.Group>\r\n            {isDiscount && (\r\n              <Form.Group>\r\n                <label htmlFor=\"discount-end-date\">Дата окончания скидки*</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"discount-end-date\"\r\n                  className=\"input-block\"\r\n                  name=\"date\"\r\n                  min={getDateToday()}\r\n                  defaultValue={getDateToday()}\r\n                  ref={register({required: true})}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <Button primary type=\"submit\" disabled={isUploadData}>\r\n              {isDefaultForm ? 'Добавить' : 'Изменить'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {idSelectedProduct, productsList} = state.products;\r\n  return {\r\n    idSelectedProduct: idSelectedProduct,\r\n    selectedProduct: productsList.find((product) => product.productId === idSelectedProduct)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductForm);\r\n","import React from 'react';\r\nimport {Card, Button} from 'bootstrap-4-react';\r\nimport './Product.css';\r\nimport {connect} from 'react-redux';\r\nimport {setIdSelectedProduct} from '../../redux/actions';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {PATH_PRODUCTS} from '../../utils/constants';\r\nimport {onDeleteProduct} from '../../utils/database';\r\nimport {pluralType} from '../../utils/utils';\r\n\r\nfunction Product({productId, title, price, description, file, date, discount, setIdSelectedProduct}) {\r\n  const history = useHistory();\r\n  const isDiscountValid = date > Date.now();\r\n\r\n  function getDiscountDaysLeft() {\r\n    const oneHour = 3600000;\r\n    const hoursLeft = Math.floor((date - Date.now()) / oneHour);\r\n    const daysLeft = Math.floor(hoursLeft / 24);\r\n    if (!daysLeft) {\r\n      return `До конца акции ${hoursLeft} ${pluralType(hoursLeft, 'час', 'часа', 'часов')}`;\r\n    }\r\n    return `До конца акции ${daysLeft} ${pluralType(daysLeft, 'день', 'дня', 'дней')}`;\r\n  }\r\n\r\n  function getDiscountPrice() {\r\n    const discountPrice = price - (price * discount) / 100;\r\n    return discountPrice.toFixed(2);\r\n  }\r\n\r\n  function onChangeProduct() {\r\n    setIdSelectedProduct(productId);\r\n    history.push('/change-form');\r\n  }\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <Card>\r\n        <div className=\"product__image\">\r\n          <img src={file} alt=\"\" />\r\n        </div>\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>{description}</Card.Text>\r\n        </Card.Body>\r\n        <div className=\"product__price\">\r\n          {isDiscountValid && (\r\n            <>\r\n              <div className=\"product__discount-days\">{getDiscountDaysLeft()}</div>\r\n              <div className=\"product__discount-persent\">{discount}% скидка</div>\r\n              <span className=\"product__discount-price\">{getDiscountPrice()} грн.</span>\r\n            </>\r\n          )}\r\n          <span className={`product__current-price ${isDiscountValid && 'product__discount-active'}`}>\r\n            {price} грн.\r\n          </span>\r\n        </div>\r\n        <Card.Footer>\r\n          <Button\r\n            className=\"product__delete-button\"\r\n            primary\r\n            onClick={() => onDeleteProduct(`${PATH_PRODUCTS}/${productId}`)}\r\n          >\r\n            Удалить\r\n          </Button>\r\n          <Button primary onClick={onChangeProduct}>\r\n            Изменить\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setIdSelectedProduct\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","import React, {useEffect} from 'react';\r\nimport Product from '../Product/Product';\r\nimport './Products.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {setProductsList} from '../../redux/actions';\r\nimport {getRef} from '../../utils/database';\r\nimport {PATH_PRODUCTS} from '../../utils/constants';\r\nimport Error from '../Error/Error';\r\n\r\nfunction Products({setProductsList, productsList}) {\r\n  useEffect(() => {\r\n    const data = getRef(PATH_PRODUCTS);\r\n    data.on('value', (snapshot) => {\r\n      const data = snapshot.val();\r\n      const productsList = [];\r\n      for (const product in data) {\r\n        productsList.push({productId: product, ...data[product]});\r\n      }\r\n      setProductsList(productsList);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Products\">\r\n      {productsList.length ? (\r\n        productsList.map((product) => {\r\n          const {title} = product;\r\n          return <Product key={title} {...product} />;\r\n        })\r\n      ) : (\r\n        <Error error={{message: 'Список пуст. Перейдите на страницу с формой добавления продукта.'}} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productsList: state.products.productsList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setProductsList\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({component: Component, isUserAuth, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isUserAuth ? <Component {...props} isDefaultForm={rest.isDefaultForm} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Button} from 'bootstrap-4-react/lib/components';\r\nimport {NavLink, useLocation} from 'react-router-dom';\r\nimport './Menu.css';\r\nimport {signOut} from '../../utils/auth';\r\nimport {PATH_PRODUCTS} from '../../utils/constants';\r\n\r\nexport default function Menu() {\r\n  const {pathname} = useLocation();\r\n  const productsPath = `/${PATH_PRODUCTS}`;\r\n  const formPath = '/form';\r\n  return (\r\n    <nav className=\"menu\">\r\n      {pathname !== productsPath && (\r\n        <NavLink to={productsPath} className=\"menu__link\">\r\n          <Button primary>Каталог</Button>\r\n        </NavLink>\r\n      )}\r\n      {pathname !== formPath && (\r\n        <NavLink to={formPath} className=\"menu__link\">\r\n          <Button primary>Форма</Button>\r\n        </NavLink>\r\n      )}\r\n\r\n      <NavLink to=\"/\" className=\"menu__link\">\r\n        <Button primary onClick={signOut}>\r\n          Выйти\r\n        </Button>\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Auth from './Auth/Auth';\r\nimport ProductForm from './ProductForm/ProductForm';\r\nimport Products from './Products/Products';\r\nimport {HashRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport {connect} from 'react-redux';\r\nimport Menu from './Menu/Menu';\r\nimport {PATH_PRODUCTS} from '../utils/constants';\r\n\r\nfunction App({isUserAuth}) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {isUserAuth && <Menu />}\r\n        <Switch>\r\n          <PrivateRoute path={`/${PATH_PRODUCTS}`} isUserAuth={isUserAuth} component={Products} />\r\n          <PrivateRoute path=\"/form\" isDefaultForm={true} isUserAuth={isUserAuth} component={ProductForm} />\r\n          <PrivateRoute path=\"/change-form\" isDefaultForm={false} isUserAuth={isUserAuth} component={ProductForm} />\r\n          {isUserAuth && <Redirect exact from=\"/\" to={`/${PATH_PRODUCTS}`} />}\r\n          <Route path=\"/signUp\" render={() => <Auth isSignUp={true} />} />\r\n          <Route path=\"/\" render={() => <Auth isSignUp={false} />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isUserAuth: state.auth.currentUser\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {SET_CURRENT_USER} from './types';\r\n\r\nconst initialState = {\r\n  currentUser: ''\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {...state, currentUser: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {SET_PRODUCTS, SET_ID_SELECTED_PRODUCT} from './types';\r\n\r\nconst initialState = {\r\n  productsList: [],\r\n  idSelectedProduct: ''\r\n};\r\n\r\nexport const databaseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS:\r\n      return {...state, productsList: action.payload};\r\n    case SET_ID_SELECTED_PRODUCT:\r\n      return {...state, idSelectedProduct: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {authReducer} from './authReducer';\r\nimport {databaseReducer} from './databaseReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  products: databaseReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from 'redux';\r\nimport App from './components/App';\r\nimport {rootReducer} from './redux/rootReducer';\r\nimport {Provider} from 'react-redux';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}